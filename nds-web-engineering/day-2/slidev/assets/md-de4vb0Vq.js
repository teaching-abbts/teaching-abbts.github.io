import{b as r,o,w as a,g as l,ad as n,v as c,x as s,X as t}from"./modules/vue-CghAfs9N.js";import{I as i}from"./slidev/default-B32Nyb52.js";import{u as h,f as p}from"./slidev/context-CHTTBj0z.js";import{_ as g}from"./index-B4DMLmgX.js";import"./monaco/bundled-types-CTRGeRro.js";import"./modules/file-saver-BzOOqXCn.js";import"./modules/shiki-CVmV-mGN.js";const m={__name:"18-JavaScript-Vergleiche-logische-Operatoren.md__slidev_19",setup(f){const{$clicksContext:u,$frontmatter:d}=h();return u.setup(),(x,e)=>(o(),r(i,c(s(t(p)(t(d),18))),{default:a(()=>e[0]||(e[0]=[l("h1",null,"JavaScript - Vergleiche und logische Operatoren",-1),l("ul",null,[l("li",null,"JS hat ein paar eigenwillige und gewöhnungsbedürfte Eigenheiten, die unerfahrenen Entwicklern das Leben schwer machen können, wenn sie nicht über das nötige Wissen verfügen."),l("li",null,"Gewisse Eigenheiten sind bedingt durch historische Fehlentscheide"),l("li",null,"Andere Eigenheiten sind der dynamischen Natur von JS geschuldet und kommen auch in anderen dynamischen Sprachen vor (z.B. PHP, Perl)")],-1),l("p",null,[n("Angenommen wir haben "),l("code",null,"const x = 5;"),n(" führt dies zu folgenden Ergebnissen:")],-1),l("table",null,[l("thead",null,[l("tr",null,[l("th",null,"Operator"),l("th",null,"Beschreibung"),l("th",null,"Vergleich"),l("th",null,"Rückgabewert")])]),l("tbody",null,[l("tr",null,[l("td",null,[l("code",null,"==")]),l("td",null,"equal to"),l("td",null,[l("code",null,"x == 8")]),l("td",null,[l("code",null,"false")])]),l("tr",null,[l("td"),l("td"),l("td",null,[l("code",null,"x == 5")]),l("td",null,[l("code",null,"true")])]),l("tr",null,[l("td"),l("td"),l("td",null,[l("code",null,'x == "5"')]),l("td",null,[l("code",null,"true")])]),l("tr",null,[l("td",null,[l("code",null,"===")]),l("td",null,"equal value and equal type"),l("td",null,[l("code",null,"x === 5")]),l("td",null,[l("code",null,"true")])]),l("tr",null,[l("td"),l("td"),l("td",null,[l("code",null,'x === "5"')]),l("td",null,[l("code",null,"false")])]),l("tr",null,[l("td",null,[l("code",null,"!=")]),l("td",null,"not equal"),l("td",null,[l("code",null,"x != 8")]),l("td",null,[l("code",null,"true")])]),l("tr",null,[l("td",null,[l("code",null,"!==")]),l("td",null,"not equal value or not equal type"),l("td",null,[l("code",null,"x !== 5")]),l("td",null,[l("code",null,"false")])]),l("tr",null,[l("td"),l("td"),l("td",null,[l("code",null,'x !== "5"')]),l("td",null,[l("code",null,"true")])]),l("tr",null,[l("td"),l("td"),l("td",null,[l("code",null,"x !== 8")]),l("td",null,[l("code",null,"true")])]),l("tr",null,[l("td",null,[l("code",null,">")]),l("td",null,"greater than"),l("td",null,[l("code",null,"x > 8")]),l("td",null,[l("code",null,"false")])]),l("tr",null,[l("td",null,[l("code",null,"<")]),l("td",null,"less than"),l("td",null,[l("code",null,"x < 8")]),l("td",null,[l("code",null,"true")])]),l("tr",null,[l("td",null,[l("code",null,">=")]),l("td",null,"greater than or equal to"),l("td",null,[l("code",null,"x >= 8")]),l("td",null,[l("code",null,"false")])]),l("tr",null,[l("td",null,[l("code",null,"<=")]),l("td",null,"less than or equal to"),l("td",null,[l("code",null,"x <= 8")]),l("td",null,[l("code",null,"true")])])])],-1)])),_:1,__:[0]},16))}},y=g(m,[["__scopeId","data-v-43ec2403"]]);export{y as default};
